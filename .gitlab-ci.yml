image: jhipster/jhipster:v5.5.0

cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
        - .maven/
stages:
    - build
    - test
    - package
    - docker
    - delivery
    - deploy

variables:
  service: "klavback"
  task: "klavback"
  family: "klavback"
  region: "us-east-1"
  cluster: "klav"
  image_name: "$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME"
  dockerfile_dir: "$CI_PROJECT_DIR"
#  image_tag: "${CI_PROJECT_ID}-${CI_COMMIT_SHA}"
  image_tag: "snapshot"
  registry_user: "gitlab-ci-token"
  registry_pass: "$CI_JOB_TOKEN"
  registry_url: "$CI_REGISTRY"
  registry_prod_url: "155084925036.dkr.ecr.us-east-1.amazonaws.com/klav-back"

before_script:
    - export MAVEN_USER_HOME=`pwd`/.maven
    - ./mvnw com.github.eirslett:frontend-maven-plugin:install-node-and-yarn -DnodeVersion=v8.12.0 -DyarnVersion=v1.10.1 -Dmaven.repo.local=$MAVEN_USER_HOME
    - ./mvnw com.github.eirslett:frontend-maven-plugin:yarn -Dmaven.repo.local=$MAVEN_USER_HOME

maven_compile:
    stage: build
    cache: {}
    script:
        - echo " le message de commit est $CI_COMMIT_MESSAGE"
        - ./mvnw compile -Dmaven.repo.local=$MAVEN_USER_HOME
    artifacts:
        paths:
            - target/classes/
            - target/generated-sources/
        expire_in: 1 day
    only:
      refs:
        - branches
    except:
      variables:
        - $CI_COMMIT_MESSAGE =~ /cicd-deploy/
        - $CI_COMMIT_MESSAGE =~ /update-service/

maven_test:
    stage: test
    script:
        - ./mvnw test -Dmaven.repo.local=$MAVEN_USER_HOME
    artifacts:
        reports:
            junit: target/surefire-reports/TEST-*.xml
        paths:
            - target/test-results
        expire_in: 1 day
    except:
      refs:
        - tags
      variables:
        - $CI_COMMIT_MESSAGE =~ /cicd-deploy/
        - $CI_COMMIT_MESSAGE =~ /update-service/

frontend_test:
    stage: test
    script:
        - ./mvnw com.github.eirslett:frontend-maven-plugin:yarn -Dfrontend.yarn.arguments='test -u' -Dmaven.repo.local=$MAVEN_USER_HOME
    artifacts:
        reports:
            junit: target/test-results/jest/TESTS-*.xml
        paths:
            - target/test-results
        expire_in: 1 day
    except:
      refs:
        - tags
      variables:
        - $CI_COMMIT_MESSAGE =~ /cicd-deploy/
        - $CI_COMMIT_MESSAGE =~ /update-service/

maven_package:
    stage: package
    script:
        - ./mvnw verify -Pprod -DskipTests -Dmaven.repo.local=$MAVEN_USER_HOME
    artifacts:
        paths:
            - target/*.war
        expire_in: 1 day
    except:
      refs:
        - tags
      variables:
        - $CI_COMMIT_MESSAGE =~ /cicd-deploy/
        - $CI_COMMIT_MESSAGE =~ /update-service/

docker_image:
    image: docker:latest
    services:
        - docker:dind
    stage: docker
    dependencies:
        - maven_package
    before_script:
        - docker login -u "${registry_user}" -p "${registry_pass}" "${registry_url}"
        - cp target/*.war src/main/docker
    script:
        - docker build -f src/main/docker/Dockerfile -t "${registry_url}/${image_name}:${image_tag}" src/main/docker
        - docker run -d --name test "${registry_url}/${image_name}:${image_tag}" && sleep 60
        - docker logs test
        - docker stop test && docker rm test
        - docker push "${registry_url}/${image_name}:${image_tag}"
    except:
      refs:
        - tags
      variables:
        - $CI_COMMIT_MESSAGE =~ /cicd-deploy/
        - $CI_COMMIT_MESSAGE =~ /update-service/

.update_service:
  image: docker:latest
  stage: delivery
  before_script:
    - apk add --no-cache curl jq python py-pip
    - pip install awscli
    - aws configure set default.region ${region}
  script:
    - aws ecs create-service --service  "${service}" --cli-input-json file://service-definition.json
  only:
    varables:
      - $CI_COMMIT_MESSAGE =~ /update-service/
    refs:
      - tags
  except:
    - /^[^v][^0-9]+.*$/

docker_release_image:
  image: docker:latest
  stage: delivery
  before_script:
    - apk add --no-cache curl jq python py-pip
    - pip install awscli
    - IMAGE_TAG="$(echo ${CI_COMMIT_TAG/*v/})"
    - docker login -u "${registry_user}" -p "${registry_pass}" "${registry_url}"
  services:
    - docker:dind
  script:
    - docker pull "${registry_url}/${image_name}:${image_tag}"
    - docker tag "${registry_url}/${image_name}:${image_tag}" "${registry_url}/${image_name}:${CI_COMMIT_TAG/*v/}"
    - docker tag "${registry_url}/${image_name}:${image_tag}" "${registry_prod_url}:${CI_COMMIT_TAG/*v/}"
    - docker push "${registry_url}/${image_name}:${CI_COMMIT_TAG/*v/}"
    - $(aws ecr get-login --no-include-email --region "${region}")
    - docker push "${registry_prod_url}:${CI_COMMIT_TAG/*v/}"
    - docker rmi "${registry_url}/${image_name}:${image_tag}"
  only:
    - tags
  except:
    - /^[^v][^0-9]+.*$/

.deploy_ecs:
  image: docker:latest
  artifacts:
    paths:
      - task-definition-${CI_COMMIT_SHA}.json
    expire_in: 1 day
  stage: deploy
  when: manual
  before_script:
    - apk add --no-cache curl jq python py-pip
    - pip install awscli
    - IMAGE_TAG="$(echo ${CI_COMMIT_TAG/*v/})"
    - aws configure set default.region ${region}
  services:
    - docker:dind
  script:
    - sed -e "s;latest;${IMAGE_TAG};g" task-definition-${env}.json > task-definition-${CI_COMMIT_SHA}.json
    - aws ecs register-task-definition --family "${family}" --cli-input-json "file://task-definition-${CI_COMMIT_SHA}.json"
    - aws ecs update-service  --cluster "${cluster}" --service "${service}" --task-definition "${task}"

deploy_ecs_rec:
  extends: .deploy_ecs
  variables:
    env : "rec"
  environment:
    name: rec
    url: http://ec2-3-91-28-47.compute-1.amazonaws.com
  only:
    - tags
  except:
    - master@klav/klav-back

deploy_ecs_prod:
  extends: .deploy_ecs
  variables:
    env : "prod"
    cluster: "klav-prod"
  environment:
    name: prod
    url: http://ec2-3-91-28-47.compute-1.amazonaws.com
  only:
    - tags
  except:
    - develop@klav/klav-back
    - feature/.*@klav/klav-back
  #  - /^(?!master).+@/
