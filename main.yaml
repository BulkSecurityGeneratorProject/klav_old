Description: >

  This template deploys a VPC, with a pair of public and private subnets spread
  across two Availabilty Zones. It deploys an Internet Gateway, with a default
  route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ),
  and default routes for them in the private subnets.

  It then deploys a highly available ECS cluster using an AutoScaling Group, with
  ECS hosts distributed across multiple Availability Zones.

  Finally, it deploys a pair of example ECS services from containers published in
  Amazon EC2 Container Registry (Amazon ECR).

  Last Modified: 22nd September 2016
  Author: Paul Maddox <pmaddox@amazon.com>

Parameters:
  Size:
    Description: A size type of infra
    Type: String
    Default: test
    AllowedValues: [prod, dev, test]
    ConstraintDescription: must specify prod, dev, or test

Conditions:
  CreateProdRessources: !Equals [!Ref Size, prod]

Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/klav-cloudformation/vpc.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VpcCIDR: 10.180.0.0/16
        PublicSubnet1CIDR: 10.180.8.0/21
        PublicSubnet2CIDR: 10.180.16.0/21
        PrivateSubnet1CIDR: 10.180.24.0/21
        PrivateSubnet2CIDR: 10.180.32.0/21
        Size: !Ref Size


  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/klav-cloudformation/security-groups.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC

  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/klav-cloudformation/load-balancers.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.PublicSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

  ECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/klav-cloudformation/ecs-cluster.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        InstanceType: !If [ CreateProdRessources, t2.small, t2.micro ]
        ClusterSize: !If [ CreateProdRessources , 3, 1 ]
        Size: !Ref Size
        VPC: !GetAtt VPC.Outputs.VPC
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        Subnets: !GetAtt VPC.Outputs.PrivateSubnet1

  WebsiteService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/klav-cloudformation/service-back.yaml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC
        Cluster: !GetAtt ECS.Outputs.Cluster
        DesiredCount: 2
        ProductServiceUrl:
          !Join ["/", [!GetAtt ALB.Outputs.LoadBalancerUrl, "products"]]
        Listener: !GetAtt ALB.Outputs.Listener
        Path: /
        ECSServiceAutoScalingRoleARN: !GetAtt ECS.Outputs.ECSServiceAutoScalingRole

  LifecycleHook:
    Type: AWS::CloudFormation::Stack
    Condition: CreateProdRessources
    Properties:
      TemplateURL: https://s3.amazonaws.com/klav-cloudformation/lifecyclehook.yaml
      Parameters:
        Cluster: !GetAtt ECS.Outputs.Cluster
        ECSAutoScalingGroupName: !GetAtt ECS.Outputs.ECSAutoScalingGroupName

Outputs:
  EcsClusterName:
    Description: The ECS cluster name
    Value: !GetAtt ECS.Outputs.Cluster

  LoadBalancerUrl:
    Description: The loadBalancer url
    Value: !GetAtt ALB.Outputs.LoadBalancerUrl

  WebsiteServiceUrl:
    Description: The URL endpoint for the website service
    Value: !Join ["", [!GetAtt ALB.Outputs.LoadBalancerUrl, "/"]]
